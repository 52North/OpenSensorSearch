<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.n52.oss</groupId>
		<artifactId>parent</artifactId>
		<version>1.0</version>
	</parent>
	<artifactId>website</artifactId>
	<packaging>war</packaging>

	<version>0.6</version>
	<name>Open Sensor Search Website</name>

	<inceptionYear>2013</inceptionYear>

	<properties>
		<spring.version>3.1.1.RELEASE</spring.version>
		<logback.version>1.0.13</logback.version>

		<oss.logger.filepath>${catalina.base:-.}/logs/oss</oss.logger.filepath>
		<oss.logger.level>DEBUG</oss.logger.level>
	</properties>

	<dependencies>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>${logback.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- Spring Security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>1.1.2</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.2.2</version>
		</dependency>

		<!-- Apache Commons Upload -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.3.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.1</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.2.4</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.3.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpmime</artifactId>
			<version>4.3.1</version>
		</dependency>

		<dependency>
			<groupId>org.n52.oss</groupId>
			<artifactId>sir-common</artifactId>
			<version>0.3</version>
		</dependency>
	</dependencies>
	<build>
		<finalName>oss</finalName>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>

				<configuration>
					<!-- have to explicitly add resources and target paths if I want to
						do filtering on different resources -->
					<!-- http://maven.apache.org/plugins/maven-war-plugin/examples/adding-filtering-webresources.html -->
					<webResources>
						<resource>
							<directory>src/main/webapp</directory>
							<filtering>true</filtering>
						</resource>
						<!-- <resource> -->
						<!-- <directory>src/main/resources</directory> -->
						<!-- <filtering>true</filtering> -->
						<!-- <targetPath>WEB-INF/classes</targetPath> -->
						<!-- </resource> -->
					</webResources>

					<!-- <webXml>${basedir}/src/main/webapp/WEB-INF/web.xml</webXml> -->
					<!-- <filteringDeploymentDescriptors>true</filteringDeploymentDescriptors> -->
				</configuration>
			</plugin>

			<plugin>
				<!-- check for correct source file headers during test phase: http://code.google.com/p/maven-license-plugin/wiki/HowTo -->
				<!-- run "mvn license:check" to check -->
				<!-- run "mvn license:format" to add to the files -->
				<groupId>com.mycila.maven-license-plugin</groupId>
				<artifactId>maven-license-plugin</artifactId>
				<version>1.9.0</version>
				<configuration>
					<header>src/main/resources/license_header.txt</header>
					<excludes>
						<exclude>**/logback*</exclude>
						<exclude>**/test/resources/**</exclude>
						<exclude>**/*.xml</exclude>
						<exclude>**/js/lib/**</exclude>
						<exclude>**/js/min/lib/**</exclude>
						<exclude>**/*.css</exclude>
					</excludes>
					<includes>
						<include>**/*.java</include>
						<include>**/*.jsp</include>
						<include>**/*.js</include>
						<include>**/*.xsl</include>
						<include>**/*.sch</include>
						<include>**/*.sql</include>
						<!-- <include>**/*.css</include> -->
						<include>**/*.html</include>
					</includes>
					<strictCheck>true</strictCheck>
					<properties>
						<year>${project.inceptionYear}</year>
					</properties>
					<mapping>
						<sch>XML_STYLE</sch>
					</mapping>
				</configuration>
				<executions>
					<execution>
						<phase>test</phase>
						<!-- test will fail if license headers are not correct, run license:format
							to add the headers. -->
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
